{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["initialState","reducer","state","action","type","inputRef","current","value","toUpperCase","filter","item","index","App","useEffect","focus","useRef","useReducer","dispatch","className","style","width","onSubmit","event","preventDefault","blur","ref","placeholder","aria-label","aria-describedby","onFocus","map","onClick","xmlns","height","fill","viewBox","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAIMA,EAAe,GACfC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOD,EAAOE,SAASC,QAAQC,MAAxB,sBACCL,GADD,CACQC,EAAOE,SAASC,QAAQC,MAAMC,gBACzCN,EACN,IAAK,mBACH,OAAOA,EAAMO,QAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAUR,EAAOQ,SACxD,QACE,OAAOT,IA2EEU,MAxEf,WAOEC,qBAAU,WACRR,EAASC,QAAQQ,WAGnB,IAAMT,EAAWU,iBAAO,MAXX,EAYaC,qBAAWf,EAASD,GAZjC,mBAYNE,EAZM,KAYCe,EAZD,KAab,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,OAAOC,MAAO,CAAEC,MAAO,SAAtC,SACE,sBAAKF,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,6BACA,sBAAMG,SAjBO,SAACC,GACpBA,EAAMC,iBACNN,EAAS,CAAEb,KAAM,iBAAkBC,aACnCA,EAASC,QAAQkB,QAcX,SACE,sBAAKN,UAAU,mBAAf,UACE,uBACEO,IAAKpB,EACLD,KAAK,OACLc,UAAU,eACVQ,YAAY,cACZC,aAAW,uBACXC,mBAAiB,eACjBC,QAAS,kBAAOxB,EAASC,QAAQC,MAAQ,MAE3C,qBAAKW,UAAU,qBAAf,SACE,wBAAQA,UAAU,4BAA4Bd,KAAK,SAAnD,sBAMN,gCACGF,EAAM,GAAK,oBAAIgB,UAAU,aAAd,2BAAgD,GAC3DhB,EAAM4B,KAAI,SAACpB,EAAMC,GAChB,OACE,oBAAIO,UAAU,aAAd,SACE,qBAAIA,UAAU,0CAAd,UACE,+BAAOR,IACP,wBACEQ,UAAU,gBAEVa,QAAS,kBACPd,EAAS,CAAEb,KAAM,mBAAoBO,WAJzC,SAOE,qBACEqB,MAAM,6BACNZ,MAAM,KACNa,OAAO,KACPC,KAAK,eACLhB,UAAU,sBACViB,QAAQ,YANV,SAQE,sBAAMC,EAAE,2NAbLzB,OALqBA,iBC7CjC0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c212b7de.chunk.js","sourcesContent":["import React, { useRef, useReducer, useEffect } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nconst initialState = [];\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"onHandleSubmit\":\n      return action.inputRef.current.value\n        ? [...state, action.inputRef.current.value.toUpperCase()]\n        : state;\n    case \"handleRemoveItem\":\n      return state.filter((item, index) => index !== action.index);\n    default:\n      return state;\n  }\n};\nfunction App() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch({ type: \"onHandleSubmit\", inputRef });\n    inputRef.current.blur();\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const inputRef = useRef(null);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div className=\"App\">\n      <div className=\"card\" style={{ width: \"22rem\" }}>\n        <div className=\"card-body\">\n          <h3 className=\"card-title\">ToDo_Aplication</h3>\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-group mb-3\">\n              <input\n                ref={inputRef}\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Add Item...\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n                onFocus={() => (inputRef.current.value = \"\")}\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" type=\"submit\">\n                  +\n                </button>\n              </div>\n            </div>\n          </form>\n          <div>\n            {state[0] ? <h4 className=\"card-title\">Pending tasks</h4> : \"\"}\n            {state.map((item, index) => {\n              return (\n                <ul className=\"list-group\" key={index}>\n                  <li className=\"list-group-item list-group-item-success\">\n                    <span>{item}</span>\n                    <button\n                      className=\"btn delet-btn\"\n                      key={index}\n                      onClick={() =>\n                        dispatch({ type: \"handleRemoveItem\", index })\n                      }\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"19\"\n                        height=\"19\"\n                        fill=\"currentColor\"\n                        className=\"bi bi-x-circle-fill\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\" />\n                      </svg>\n                    </button>\n                  </li>\n                </ul>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}